\ 3 node ram cluster. 192 addressable words. Word and byte addressable.
\
\ Pulled from: https://github.com/jamesbowman/ga144tools/blob/master/src/nt.ga
\
\ Includes test code to write, read, and send test values.
\ See 3-node-ram.ga for a version using ASM syntax.
\
\ Output:
\ 382
\ 380
\ 378
\ ...
\ 4
\ 2
\ 0
\ [exit]

\ ram data nodes
node 505 /p east
node 507 /p west
node 406 /p north

\ ram control node
node 506
 /b north /p north
: addr  ( -- o )
 \ fetch byte address 0-383
 \ set A to bank
 \ o to offset 0-63
   dup 2/ 2/ 2/ 2/ 2/ 2/
     tab
    , west
    , south
    , east

: tab
    pop +, a! @ a! 63 and ;

: read
    @b addr
    { @p a! @ !p } ! !
    @ !b ;

: write
    @b addr
    { @p a! } ! !
    { @p ! } ! @b ! ;

: read_byte
  @b dup dup addr
  { @p a! @ !p } ! !
  2/ 2* or                \ low bit of addr
  2* 2* 2*                \ 0 or 8
  push @ next: hibyte

: lo8
   255 and !b ;

: hibyte
  begin 2/ unext lo8 ;

: write_byte
    @b dup addr
    { @p a! } ! !
    ! @b ! ;

: erase
  @b push @b
  begin
    dup addr
    { @p a! dup } ! !
    { or ! } !
    1 . +
 next ;

\ test section ------------------

node 606 \ test node
/a south /b north
: write ( v a - )
   { write@506 } ! ! ! ;
: read ( a - v )
  { read@506 } ! ! @ ;
: erase ( a n - )
  { erase@506 } ! ! ! ;

: out !b ;
: main
\ write a=a*a, for each address a in ram
191 for
  pop dup push
  dup dup dup + over write
next

\ read and print values
191 for
  pop dup push dup read out
next

node 708
/a west
include 708serial.ga
: main
191 for @ send next exit

node 706 wire south east
node 707 wire west east
